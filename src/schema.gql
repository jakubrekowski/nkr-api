# Query
type Query {
  owners: [Owner!]
  owner(id: ID!): Owner
  units: [Unit!]
  unit(id: ID!): Unit
  manufacturers: [Manufacturer!]
  manufacturer(id: ID!): Manufacturer
  models: [Model!]
  model(id: ID!): Model
  imageTags: [ImageTag!]
  imageTag(id: ID!): ImageTag
  images: [Image!]
  image(id: ID!): Image
  documentations: [Documentation!]
  documentation(id: ID!): Documentation
  tokenGet(
    username: String!
    password: String!
  ): Token
  associations: [Owner!]
  tokenValid(token: String!): TokenValid
} 

# Mutatuon

type Mutation {
  createOwner(
    token: String!
    name: String!
    isAssociation: Boolean
    adress: String
    geopoint: String
  ): Owner!
  deleteOwner(token: String! id: ID!): Owner!
  createUnit(
    token: String!
    name: String!
    number: String!
    model: ID!
    owner: ID!
    manufacturer: ID!
    state: String!
    assignments: String!
    repairHistory: String!
    countryOfOperation: String!
    heroImage: ID!
  ): Unit!
  deleteUnit(token: String! id: ID!): Unit!
  createManufacturer(
    token: String!
    name: String!
    shortName: String!
    country: String!
    creationDate: String!
    works: Boolean!
    dateOfLiquidation: String!
  ): Manufacturer!
  deleteManufacturer(token: String! id: ID!): Manufacturer!
  createModel(
    token: String!
    factoryType: String!
    manufacturer: ID!
    manufacturerModel: String!
    intendentUse: String!
    type: String!
    tractionType: String!
    specTable: String!
    series: String!
    heroImage: ID!
  ): Model!
  deleteModel(token: String! id: ID!): Model!
  createImageTag(
    token: String!
    name: String!
  ): ImageTag!
  deleteImageTag(token: String! id: ID!): ImageTag!
  createImage(
    token: String!
    units: [ID!]
    models: [ID!]
    description: String!
    author: String!
    date: String!
    tags: [ID!]
    image: String!
  ): Image!
  deleteImage(token: String! id: ID!): Image!
  createDocumentation(
    token: String!
    title: String!
    author: String!
    issueNumber: String!
    publisher: String!
    releaseDate: String!
    type: String!
    url: String!
    model: ID!
  ): Documentation!
  deleteDocumentation(token: String! id: ID!): Documentation!
}

# Types
type Manufacturer {
  id: ID!
  name: String!
  shortName: String!
  country: String!
  creationDate: String!
  works: Boolean!
  dateOfLiquidation: String
  units: [Unit!]
  models: [Model!]
  moderator: String!
  updateDate: Float!
}

type Model {
  id: ID!
  factoryType: String!
  manufacturer: Manufacturer!
  units: [Unit!]
  manufacturerModel: String!
  intendentUse: String!
  tractionType: String!
  type: String!
  specTable: String!
  series: String!
  documentation: [Documentation!]
  images: [Image!]
  heroImage: Image
  moderator: String!
  updateDate: Float!
}

type Owner {
  id: ID!
  name: String!
  units: [Unit!]
  isAssociation: Boolean
  adress: String
  geopoint: String
  moderator: String!
  updateDate: Float!
}

type Unit {
  id: ID!
  name: String!
  number: String!
  model: Model!
  owner: Owner!
  manufacturer: Manufacturer!
  state: String!
  assignments: String
  repairHistory: String
  countryOfOperation: String!
  images: [Image!]
  heroImage: Image
  moderator: String!
  updateDate: Float!
}

type ImageTag {
  id: ID!
  name: String!
  images: [Image!]
  moderator: String!
  updateDate: Float!
}

type Image {
  id: ID!,
  units: [Unit!]
  models: [Model!]
  author: String!
  date: String!
  description: String!
  tags: [ImageTag!]
  moderator: String!
  updateDate: Float!
}

type Documentation {
  id: ID!
  title: String!
  author: String!
  issueNumber: String!
  publisher: String!
  releaseDate: String!
  type: String!
  url: String!
  model: Model! 
  moderator: String!
  updateDate: Float!
}

type Token {
  token: String!
}

type TokenValid {
  valid: Boolean!
}